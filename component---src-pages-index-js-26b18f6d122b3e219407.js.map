{"version":3,"file":"component---src-pages-index-js-26b18f6d122b3e219407.js","mappings":"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","sources":["webpack://beatbracket/./src/components/Clicky.jsx","webpack://beatbracket/./src/assets/images/Spotify_Logo_RGB_Green.png","webpack://beatbracket/./src/components/LoginButton.jsx","webpack://beatbracket/./src/components/LandingLetter.jsx","webpack://beatbracket/./src/pages/index.js","webpack://beatbracket/./src/utilities/helpers.js","webpack://beatbracket/./src/utilities/spotify.js","webpack://beatbracket/./src/assets/images/guestProfileImage.png"],"sourcesContent":["import React from \"react\";\nimport { Script } from \"gatsby\";\n\nconst Clicky = () => {\n  return (\n    <>\n      <Script src=\"//static.getclicky.com/101396268.js\" />\n      <noscript>\n        <p>\n          <img\n            alt=\"Clicky\"\n            width=\"1\"\n            height=\"1\"\n            src=\"//in.getclicky.com/101396268ns.gif\"\n          />\n        </p>\n      </noscript>\n    </>\n  );\n};\n\nexport default Clicky;\n","export default __webpack_public_path__ + \"static/Spotify_Logo_RGB_Green-0c4ae91bae23217d39c97c322a80e1fc.png\";","import React from \"react\";\n\nimport { generateRandomString } from \"../utilities/helpers\";\n\nimport spotifyLogo from \"../assets/images/Spotify_Logo_RGB_Green.png\";\n\nconst LoginButton = () => {\n  function login() {\n    const stateKey = \"spotify_auth_state\";\n    const client_id = \"fff2634975884bf88e3d3c9c2d77763d\"; // Your client id\n    //let redirect_uri = 'https://spotifydata.com/songdata'; // Your redirect uri\n    console.log(window.location);\n    const redirect_uri = window.location.origin + \"/my-brackets\"; // Your redirect uri\n\n    const state = generateRandomString(16);\n\n    const show_dialog =\n      localStorage.getItem(\"rememberMe\") === \"true\" ? false : true;\n\n    sessionStorage.setItem(stateKey, state);\n    const scope =\n      \"playlist-modify-private playlist-modify-public user-read-private\";\n\n    let url = \"https://accounts.spotify.com/authorize\";\n    url += \"?response_type=token\";\n    url += \"&client_id=\" + encodeURIComponent(client_id);\n    url += \"&scope=\" + encodeURIComponent(scope);\n    url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\n    url += \"&state=\" + encodeURIComponent(state);\n    url += \"&show_dialog=\" + encodeURIComponent(show_dialog);\n\n    localStorage.setItem(\"rememberMe\", true);\n    window.location = url;\n  }\n\n  return (\n    <button\n      onClick={login}\n      className=\"bg-black hover:bg-zinc-800 text-white border-black hover:border-zinc-800 inline-flex flex-row items-center justify-center\"\n    >\n      <span>Login with&nbsp;</span>\n      <img src={spotifyLogo} alt=\"Spotify\" className=\"h-6 text-white\"></img>\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\n\nexport default function LandingLetter({ letter, animation }) {\n  return (\n    <div\n      className={\n        \"inline-block mb-0.5 font-bold font-display text-8xl text-black \" +\n        (animation ? animation : \"\")\n      }\n    >\n      {letter}\n    </div>\n  );\n}\n","import React from \"react\"\nimport Clicky from \"../components/Clicky\";\nimport LandingLetter from \"../components/LandingLetter\";\nimport LoginButton from \"../components/LoginButton\";\n\nconst App = () => {\n\n  return (\n    <>\n      <Clicky />\n      <main className=\"h-screen bg-zinc-300\">\n        <nav className=\"absolute w-full z-50 p-2 bg-black\"></nav>\n        <div className=\"flex flex-col justify-center items-center h-full\">\n          <div className=\"inline-flex flex-col justify-center items-center\">\n            <div className=\"relative\">\n              <LandingLetter letter={\"Beat Bracket\"} animation={\"animate-flipy\"} />\n            </div>\n            {/* <div className=\"mb-0.5 text-black font-bar font-bold text-xl\">THE song bracket maker</div> */}\n            <span className=\"mt-1.5\"><LoginButton /></span>\n          </div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default App\n\nexport function Head() {\n  return (\n    <title>Beat Bracket</title>\n  )\n}\n","// Screnshot library\nimport html2canvas from \"html2canvas\";\n\nimport { navigate } from \"gatsby\";\n\nimport { getUserInfo } from \"./spotify\";\n\nexport function generateRandomString(length) {\n\tlet text = '';\n\tlet possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < length; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}\n\nexport async function getParamsFromURL(new_url) {\n\ttry {\n\t\tlet hashParams = getHashParams()\n\t\tif (hashParams.raw_hash !== '') {\n\t\t\twindow.history.replaceState({}, document.title, new_url);\n\t\t\thashParams.expires_at = Date.now() + (parseInt(hashParams.expires_in) * 1000);\n\t\t\tdelete hashParams.expires_in;\n\t\t\treturn hashParams;\n\t\t}\n\t\treturn {};\n\t} catch (err) {\n\t\tconsole.error(err.message);\n\t\treturn {};\n\t}\n}\n\nfunction getHashParams() {\n\tlet hashParams = {};\n\tlet e, r = /([^&;=]+)=?([^&;]*)/g,\n\t\tq = window.location.hash.substring(1);\n\thashParams['raw_hash'] = window.location.hash;\n\twhile (e = r.exec(q)) {\n\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t}\n\treturn hashParams;\n}\n\nexport function checkSpotifyAuth(timer = undefined) {\n\tlet mydate = new Date(parseInt(sessionStorage.getItem(\"expireTime\")));\n\tif (\n\t\tsessionStorage.getItem(\"expireTime\") === null ||\n\t\tsessionStorage.getItem(\"accessToken\") === null ||\n\t\tmydate.toString() === \"Invalid Date\" ||\n\t\tDate.now() > mydate\n\t) {\n\t\tif (timer) {\n\t\t\tclearInterval(timer);\n\t\t}\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function popularitySort(track1, track2) {\n\tif (track1.popularity > track2.popularity) { return -1 };\n\tif (track1.popularity < track2.popularity) { return 1 };\n\t// sort alphabetically for consistency if popularity is the same\n\treturn track1.name < track2.name ? -1 : track1.name > track2.name;\n}\n\nexport function switchEveryOther(array) {\n\tfor (let i = 1; i < array.length / 2; i += 2) {\n\t\tif (i % 2 !== 0) {\n\t\t\t//console.log(\"switching\", array[array.length - i].name, \"AND\", array[i].name);\n\t\t\tlet temp = array[i];\n\t\t\tarray[i] = array[array.length - i];\n\t\t\tarray[array.length - i] = temp;\n\t\t}\n\t}\n\treturn array;\n}\n\n// removes duplicates in an array of objects if a certain key/value is repeated\nexport function removeDuplicatesWithKey(theArray, key) {\n\tconsole.log(theArray);\n\t// init tracking array\n\tlet tempArray = [];\n\t//loop through given array\n\tfor (let index in theArray) {\n\t\tif (theArray[index][key] === \"Jail\") {\n\t\t\tconsole.log(tempArray);\n\t\t\tconsole.log(index);\n\t\t}\n\t\t//check to see if element at the key is already in tracking array\n\t\tif (tempArray.includes(theArray[index][key])) {\n\t\t\tconsole.log(theArray[index][key])\n\t\t\t// remove element at the current position from the array\n\t\t\ttheArray.splice(index, 1);\n\t\t\t// deincrement our position to account for the ddeleted item\n\t\t\tindex--;\n\t\t} else {\n\t\t\t// add element to our tracking array\n\t\t\ttempArray.push(theArray[index][key]);\n\t\t}\n\t}\n\treturn theArray;\n}\n\nexport async function shuffleArray(array) {\n\tlet currentIndex = array.length, randomIndex;\n\t// While there remain elements to shuffle.\n\twhile (currentIndex !== 0) {\n\t\t// Pick a remaining element.\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex--;\n\t\t// And swap it with the current element.\n\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\tarray[randomIndex], array[currentIndex]];\n\t}\n\treturn array;\n}\n\nexport function nearestGreaterPowerOf2(num) {\n\tlet current = 0;\n\tlet j = 0;\n\twhile (current <= num) {\n\t\tcurrent = 2 ** (j + 1);\n\t\tj++;\n\t}\n\treturn current;\n}\n\nexport function nearestLesserPowerOf2(num) {\n\tlet last = 0;\n\tlet current = 0;\n\tlet j = 0;\n\twhile (current <= num) {\n\t\tlast = current\n\t\tcurrent = 2 ** (j + 1);\n\t\tj++;\n\t}\n\treturn last;\n}\n\nexport function bracketSorter(a, b) {\n\tconst value1 = a[1];\n\tconst value2 = b[1];\n\n\t// r > l\n\t// for r, sort col increasing\n\t// for l, sort col decreasing\n\t// always sort row increasing\n\n\tif (value1.side === \"r\" && value2.side === \"l\") {\n\t\treturn -1;\n\t} else if (value1.side === \"l\" && value2.side === \"r\") {\n\t\treturn 1;\n\t} else if (value1.side === \"l\" && value2.side === \"l\") {\n\t\tif (value1.col > value2.col) {\n\t\t\treturn -1;\n\t\t} else if (value1.col < value2.col) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\tif (value1.index > value2.index) {\n\t\t\t\treturn 1;\n\t\t\t} else if (value1.index < value2.index) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} else if (value1.side === \"r\" && value2.side === \"r\") {\n\t\tif (value1.col > value2.col) {\n\t\t\treturn 1;\n\t\t} else if (value1.col < value2.col) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (value1.index > value2.index) {\n\t\t\t\treturn 1;\n\t\t\t} else if (value1.index < value2.index) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error(\"Found bracket with invalid side: \" + value1.side + \" or \" + value2.side);\n\t}\n}\n\nexport function openBracket(uuid, userId = undefined, state = {}) {\n\tconsole.log(\"Opening Bracket: \" + uuid);\n\t//open the bracket editor and pass the bracket id off\n\tnavigate(\"/user/\" + (userId ? userId : getUserInfo().id) + \"/bracket/\" + uuid, { state: state });\n}\n\nexport function downloadBracket(bracketId, artistName) {\n\tlet bracketEl = document.getElementById(bracketId);\n\thtml2canvas(bracketEl, {\n\t\tscale: 4,\n\t\tscrollX: -bracketEl.offsetLeft,\n\t\tscrollY: -bracketEl.offsetTop,\n\t\tlogging: false,\n\t}).then(function (canvas) {\n\t\t//canvas = document.body.appendChild(canvas); // used for debugging\n\t\t//console.log(canvas.width, canvas.height);\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.fillStyle = \"black\";\n\t\tctx.font = \"bold 30px sans-serif\";\n\t\tctx.fillText(artistName, canvas.width / 8, canvas.height / 16, 225);\n\t\tctx.font = \"8px sans-serif\";\n\t\tctx.fillText(\n\t\t\t\"Bracket made at cgarren.github.io/song-coliseum\",\n\t\t\tcanvas.width / 8,\n\t\t\tcanvas.height / 16 + 20,\n\t\t\t225\n\t\t);\n\t\tconst createEl = document.createElement(\"a\");\n\t\tcreateEl.href = canvas.toDataURL(\"image/svg+xml\");\n\t\tcreateEl.download = artistName + \" bracket from Beat Bracket\";\n\t\tcreateEl.click();\n\t\tcreateEl.remove();\n\t});\n}\n\nexport function bracketUnchanged(bracket) {\n\tif (!bracket instanceof Map) return false;\n\tfor (let element of bracket.values()) {\n\t\tif (element.col !== 0 && element.song) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}","// Guest profile pic\nimport guestProfileImage from \"../assets/images/guestProfileImage.png\";\nimport { checkSpotifyAuth } from \"./helpers\";\n\nasync function loadSpotifyRequest(url, params) {\n\tif (checkSpotifyAuth()) {\n\t\tif (params) {\n\t\t\turl = url + \"?\" + new URLSearchParams(params);\n\t\t}\n\t\tconst response = await fetch(url, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t\t}\n\t\t});\n\n\t\tif (response.ok) {\n\t\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nasync function postRequest(url, params, data) {\n\tif (params) {\n\t\turl = url + \"?\" + new URLSearchParams(params);\n\t}\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t},\n\t\tbody: JSON.stringify(data)\n\t});\n\n\tif (response.ok) {\n\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t} else if (response.status === 429) {\n\t\tthrow new Error(\"Too many requests. Code: \" + response.status);\n\t} else {\n\t\tthrow new Error(\"Unknown request error. Code: \" + response.status);\n\t}\n}\n\nasync function putRequest(url, params, data) {\n\tif (params) {\n\t\turl = url + \"?\" + new URLSearchParams(params);\n\t}\n\tconst response = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t'Content-Type': 'image/jpeg',\n\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t},\n\t\t///body: data\n\t});\n\n\tif (response.ok) {\n\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t} else if (response.status === 429) {\n\t\tthrow new Error(\"Too many requests. Code: \" + response.status);\n\t} else {\n\t\tthrow new Error(\"Unknown request error. Code: \" + response.status);\n\t}\n}\n\nasync function createPlaylist(name = \"New Playlist\", description = \"\", isPublic = true, isCollaborative = false) {\n\tconst response = await loadSpotifyRequest(\"https://api.spotify.com/v1/me\");\n\tif (!response[\"error\"]) {\n\t\tconst url = \"https://api.spotify.com/v1/users/\" + response.id + \"/playlists\"\n\t\treturn await postRequest(url, {}, {\n\t\t\t\"name\": name,\n\t\t\t\"public\": isPublic,\n\t\t\t\"collaborative\": isCollaborative,\n\t\t\t\"description\": description\n\t\t})\n\t}\n\treturn response;\n}\n\nasync function addTracksToPlaylist(playlistId, trackUris) {\n\tconst url = \"https://api.spotify.com/v1/playlists/\" + playlistId + \"/tracks\"\n\treturn await postRequest(url, {\n\t\t\"uris\": trackUris\n\t})\n}\n\nasync function getUserInfo(userId = undefined) {\n\tlet url = \"https://api.spotify.com/v1/me\";\n\tif (userId) {\n\t\turl = \"https://api.spotify.com/v1/users/\" + userId;\n\t}\n\tconst response = await loadSpotifyRequest(url);\n\tif (response !== 1) {\n\t\tif (response.images.length === 0) {\n\t\t\tresponse.images.push({\n\t\t\t\turl: guestProfileImage,\n\t\t\t});\n\t\t}\n\t\treturn response;\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nasync function isCurrentUser(userId) {\n\tconst currentUser = await getUserInfo();\n\tif (userId === currentUser.id) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport {\n\tloadSpotifyRequest,\n\tpostRequest,\n\tputRequest,\n\taddTracksToPlaylist,\n\tcreatePlaylist,\n\tgetUserInfo,\n\tisCurrentUser\n}","export default __webpack_public_path__ + \"static/guestProfileImage-56ea6ecf196675a29e7b5ffca974fde1.png\";"],"names":["Script","src","alt","width","height","onClick","console","log","window","location","redirect_uri","origin","state","generateRandomString","show_dialog","localStorage","getItem","sessionStorage","setItem","url","encodeURIComponent","className","spotifyLogo","LandingLetter","letter","animation","Clicky","LoginButton","Head","length","text","possible","i","charAt","Math","floor","random","async","getParamsFromURL","new_url","hashParams","e","r","q","hash","substring","exec","decodeURIComponent","getHashParams","raw_hash","history","replaceState","document","title","expires_at","Date","now","parseInt","expires_in","err","error","message","checkSpotifyAuth","timer","undefined","mydate","toString","clearInterval","popularitySort","track1","track2","popularity","name","shuffleArray","array","randomIndex","currentIndex","nearestGreaterPowerOf2","num","current","j","nearestLesserPowerOf2","last","bracketSorter","a","b","value1","value2","side","col","index","Error","openBracket","uuid","userId","navigate","getUserInfo","id","bracketUnchanged","bracket","Map","element","values","song","loadSpotifyRequest","params","URLSearchParams","response","fetch","headers","ok","json","images","push","guestProfileImage","isCurrentUser"],"sourceRoot":""}