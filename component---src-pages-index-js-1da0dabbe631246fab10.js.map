{"version":3,"file":"component---src-pages-index-js-1da0dabbe631246fab10.js","mappings":"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","sources":["webpack://beatbracket/./src/components/Clicky.jsx","webpack://beatbracket/./src/assets/images/Spotify_Logo_RGB_White.png","webpack://beatbracket/./src/components/FAQ/FAQSection.jsx","webpack://beatbracket/./src/components/FAQ/FAQ.jsx","webpack://beatbracket/./src/components/Footer.jsx","webpack://beatbracket/./src/assets/images/Spotify_Logo_RGB_Green.png","webpack://beatbracket/./src/components/LoginButton.jsx","webpack://beatbracket/./src/hooks/use-site-metadata.jsx","webpack://beatbracket/./src/components/SEO.jsx","webpack://beatbracket/./src/pages/index.js","webpack://beatbracket/./src/utilities/helpers.js","webpack://beatbracket/./src/utilities/spotify.js","webpack://beatbracket/./src/assets/images/guestProfileImage.png"],"sourcesContent":["import React from \"react\";\nimport { Script } from \"gatsby\";\n\nconst Clicky = () => {\n  return (\n    <>\n      <Script src=\"//static.getclicky.com/101396268.js\" />\n      <noscript>\n        <p>\n          <img\n            alt=\"Clicky\"\n            width=\"1\"\n            height=\"1\"\n            src=\"//in.getclicky.com/101396268ns.gif\"\n          />\n        </p>\n      </noscript>\n    </>\n  );\n};\n\nexport default Clicky;\n","export default __webpack_public_path__ + \"static/Spotify_Logo_RGB_White-f48fb565509bf23854a88c4832e5a760.png\";","import React from \"react\";\n\nconst FAQSection = ({ question, answer }) => {\n  return (\n    <div className=\"mb-5\">\n      <h2 className=\"font-bold text-xl text-white\">{question}</h2>\n      <div className=\"text-lg text-zinc-300\">{answer}</div>\n    </div>\n  );\n};\n\nexport default FAQSection;\n","import React from \"react\";\nimport FAQSection from \"./FAQSection\";\nimport LoginButton from \"../LoginButton\";\n\nconst FAQ = ({ loggedIn }) => {\n  return (\n    <div className=\"text-left\" aria-label=\"Frequently asked questions\">\n      <FAQSection\n        question={\"What is Beat Bracket?\"}\n        answer={\n          <>\n            Beat Bracket allows you to create and share brackets for any artist\n            on Spotify. You can automatically fill and seed brackets of\n            different sizes and then fine-tune manually by moving or replacing\n            individual songs\n          </>\n        }\n      />\n      <FAQSection\n        question={\"Why do I need a Spotify account to use Beat Bracket?\"}\n        answer={\n          \"This site uses Spotify's API to get information about artists and tracks. After you create a bracket, it is associated with your Spotify account so that you'll be able to edit and share it later!\"\n        }\n      />\n      <FAQSection\n        question={\"How do I create a bracket?\"}\n        answer={\n          <ol className=\"list-decimal list-inside\">\n            {!loggedIn ? (\n              <li>\n                To create a bracket, you must first{\" \"}\n                <LoginButton variant=\"bordered\" />\n              </li>\n            ) : null}\n            <li>Click \"Create Bracket\"</li>\n            <li>\n              Select an artist from the popup and a bracket will be created\n              containing the artist's most listened to tracks seeded by\n              popularity\n            </li>\n            <li>\n              (Optional) Click \"Edit\" to customize the bracket to your liking.\n              You can drag and drop, swap out songs, adjust the number of\n              tracks, and choose different seeding methods\n            </li>\n            <li>\n              Start selecting songs to advance to the next round! If an audio\n              preview is availiable for a track, you'll see a \"play\" icon next\n              to the track name which will play a 30 second preview of the song.\n              You can also click the Spotify icon in the top right to open the\n              track in Spotify\n            </li>\n            <li>Click \"Share\" to get a link to your newly created bracket!</li>\n          </ol>\n        }\n      />\n      <FAQSection\n        question={\n          \"Why is there a limit on the number of brackets that I can have?\"\n        }\n        answer={\n          \"Storage can be expensive! Beat Bracket currently has limited storage space and is only able to support a certain number of brackets per account. In the future I may add a way to upgrade your account to support more brackets!\"\n        }\n      />\n      <FAQSection\n        question={\"Why are there duplicate/similar tracks in my bracket?\"}\n        answer={\n          <>\n            Spotify makes it difficult to consolidate all versions of the same\n            song (especially when they are titled slightly differently eg.\n            \"Remastered\" or \"Radio edit\"). Beat Bracket uses a custom algorithm\n            to avoid showing duplicates but there are still some cases where it\n            happens. If you notice this, please{\" \"}\n            <a\n              className=\"text-green-500 hover:text-green-700 underline\"\n              href=\"mailto:feedback@beatbracket.com\"\n            >\n              let me know\n            </a>{\" \"}\n            and I'll try to fix it! In the meantime, you can manually replace\n            the duplicate track with another one of the artist's songs\n          </>\n        }\n      />\n      <FAQSection\n        question={\"How do I sign out or switch accounts?\"}\n        answer={\n          'Click your profile in the top right corner and select \"Sign Out\". You will be re-prompted to authorize Beat Bracket\\'s access to your account on the next sign in'\n        }\n      />\n      <FAQSection\n        question={\"How do I suggest an improvement?\"}\n        answer={\n          <>\n            Send me an email at{\" \"}\n            <a\n              className=\"text-green-500 hover:text-green-700 underline\"\n              href=\"mailto:feedback@beatbracket.com\"\n            >\n              feedback@beatbracket.com\n            </a>\n          </>\n        }\n      />\n    </div>\n  );\n};\n\nexport default FAQ;\n","import React from \"react\";\nimport spotifyLogo from \"../assets/images/Spotify_Logo_RGB_White.png\";\nimport FAQ from \"./FAQ/FAQ\";\n\nconst Footer = ({ heightClass, loggedIn }) => {\n  return (\n    <footer className={heightClass}>\n      <div className=\"bg-zinc-800 p-4\">\n        <FAQ loggedIn={loggedIn} />\n        <div className=\"relative text-center\">\n          <span className=\"inline-flex items-center text-white\">\n            © Cooper Garren 2023 | Content from&nbsp;\n            <a href=\"https://spotify.com\">\n              <img\n                src={spotifyLogo}\n                alt=\"Spotify\"\n                className=\"h-[22px] text-white\"\n              />\n            </a>\n          </span>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/Spotify_Logo_RGB_Green-0c4ae91bae23217d39c97c322a80e1fc.png\";","import React from \"react\";\n\nimport { generateRandomString } from \"../utilities/helpers\";\n\nimport spotifyLogoGreen from \"../assets/images/Spotify_Logo_RGB_Green.png\";\n\nconst LoginButton = ({ variant = \"borderless\" }) => {\n  function login() {\n    const stateKey = \"spotify_auth_state\";\n    const client_id = \"fff2634975884bf88e3d3c9c2d77763d\"; // Your client id\n    //let redirect_uri = 'https://spotifydata.com/songdata'; // Your redirect uri\n    console.log(window.location);\n    const redirect_uri = window.location.origin + \"/my-brackets\"; // Your redirect uri\n\n    const state = generateRandomString(16);\n\n    const show_dialog =\n      localStorage.getItem(\"rememberMe\") === \"true\" ? false : true;\n\n    sessionStorage.setItem(stateKey, state);\n    const scope =\n      \"playlist-modify-private playlist-modify-public user-read-private\";\n\n    let url = \"https://accounts.spotify.com/authorize\";\n    url += \"?response_type=token\";\n    url += \"&client_id=\" + encodeURIComponent(client_id);\n    url += \"&scope=\" + encodeURIComponent(scope);\n    url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\n    url += \"&state=\" + encodeURIComponent(state);\n    url += \"&show_dialog=\" + encodeURIComponent(show_dialog);\n\n    localStorage.setItem(\"rememberMe\", true);\n    window.location = url;\n  }\n\n  return (\n    <button\n      onClick={login}\n      className={`${\n        variant === \"bordered\"\n          ? \"bg-black hover:bg-zinc-800 border-white hover:border-zinc-200 text-white\"\n          : \"bg-black hover:bg-zinc-800 border-black hover:border-zinc-800 text-white\"\n      } inline-flex flex-row items-center justify-center`}\n    >\n      <span>Login with&nbsp;</span>\n      <img\n        src={spotifyLogoGreen}\n        alt=\"Spotify\"\n        className=\"h-6 text-white\"\n      ></img>\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\n\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nexport const Seo = ({ title, description, pathname, children }) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {/* <link rel=\"canonical\" href={seo.url}></link> */}\n      {/* <link\n        rel=\"icon\"\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👤</text></svg>\"\n      /> */}\n      {children}\n    </>\n  );\n};\n","import React from \"react\"\nimport Clicky from \"../components/Clicky\";\nimport LoginButton from \"../components/LoginButton\";\nimport Footer from \"../components/Footer\";\nimport { Seo } from \"../components/SEO\";\n\nconst App = () => {\n\n  return (\n    <>\n      <Clicky />\n      <main className=\"h-screen bg-zinc-300\">\n        {/* <nav className=\"absolute w-full z-50 p-2 bg-black\"></nav> */}\n        <div className=\"flex flex-col justify-center items-center h-5/6 px-4\">\n          <div className=\"inline-flex flex-col justify-center items-center text-center\">\n            <h1 className=\"inline-block mb-0.5 font-bold font-display text-8xl text-black \">Beat Bracket</h1>\n            <h2 className=\"mb-0.5 text-black font-bar font-bold text-xl\">Make interactive music brackets for your favorite artists!</h2>\n            <span className=\"mt-1.5\"><LoginButton /></span>\n            <p className=\"text-sm text-gray-600\">A Spotify account is required to create and save brackets</p>\n          </div>\n        </div>\n        <Footer heightClass=\"h-1/6\" />\n      </main>\n    </>\n  )\n}\n\nexport default App\n\nexport function Head() {\n  return (\n    <Seo>\n      <script type=\"application/ld+json\">\n        {`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"WebSite\",\n            \"url\": \"https://www.beatbracket.com\",\n            \"name\": \"Beat Bracket\",\n            \"contactPoint\": {\n              \"@type\": \"ContactPoint\",\n              \"telephone\": \"+5-601-785-8543\",\n              \"contactType\": \"Customer Support\"\n            }\n          }\n        `}\n      </script>\n    </Seo>\n  )\n}\n","// Screnshot library\nimport html2canvas from \"html2canvas\";\n\nimport { navigate } from \"gatsby\";\n\nimport { getUserInfo } from \"./spotify\";\n\nexport function generateRandomString(length) {\n\tlet text = '';\n\tlet possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < length; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}\n\nexport async function getParamsFromURL(new_url) {\n\ttry {\n\t\tlet hashParams = getHashParams()\n\t\tif (hashParams.raw_hash !== '') {\n\t\t\twindow.history.replaceState({}, document.title, new_url);\n\t\t\thashParams.expires_at = Date.now() + (parseInt(hashParams.expires_in) * 1000);\n\t\t\tdelete hashParams.expires_in;\n\t\t\treturn hashParams;\n\t\t}\n\t\treturn {};\n\t} catch (err) {\n\t\tconsole.error(err.message);\n\t\treturn {};\n\t}\n}\n\nfunction getHashParams() {\n\tlet hashParams = {};\n\tlet e, r = /([^&;=]+)=?([^&;]*)/g,\n\t\tq = window.location.hash.substring(1);\n\thashParams['raw_hash'] = window.location.hash;\n\twhile (e = r.exec(q)) {\n\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t}\n\treturn hashParams;\n}\n\nexport function checkSpotifyAuth(timer = undefined) {\n\tlet mydate = new Date(parseInt(sessionStorage.getItem(\"expireTime\")));\n\tif (\n\t\tsessionStorage.getItem(\"expireTime\") === null ||\n\t\tsessionStorage.getItem(\"accessToken\") === null ||\n\t\tmydate.toString() === \"Invalid Date\" ||\n\t\tDate.now() > mydate\n\t) {\n\t\tif (timer) {\n\t\t\tclearInterval(timer);\n\t\t}\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function popularitySort(track1, track2) {\n\tif (track1.popularity > track2.popularity) { return -1 };\n\tif (track1.popularity < track2.popularity) { return 1 };\n\t// sort alphabetically for consistency if popularity is the same\n\treturn track1.name < track2.name ? -1 : track1.name > track2.name;\n}\n\nexport function switchEveryOther(array) {\n\tfor (let i = 1; i < array.length / 2; i += 2) {\n\t\tif (i % 2 !== 0) {\n\t\t\t//console.log(\"switching\", array[array.length - i].name, \"AND\", array[i].name);\n\t\t\tlet temp = array[i];\n\t\t\tarray[i] = array[array.length - i];\n\t\t\tarray[array.length - i] = temp;\n\t\t}\n\t}\n\treturn array;\n}\n\n// removes duplicates in an array of objects if a certain key/value is repeated\nexport function removeDuplicatesWithKey(theArray, key) {\n\tconsole.log(theArray);\n\t// init tracking array\n\tlet tempArray = [];\n\t//loop through given array\n\tfor (let index in theArray) {\n\t\tif (theArray[index][key] === \"Jail\") {\n\t\t\tconsole.log(tempArray);\n\t\t\tconsole.log(index);\n\t\t}\n\t\t//check to see if element at the key is already in tracking array\n\t\tif (tempArray.includes(theArray[index][key])) {\n\t\t\tconsole.log(theArray[index][key])\n\t\t\t// remove element at the current position from the array\n\t\t\ttheArray.splice(index, 1);\n\t\t\t// deincrement our position to account for the ddeleted item\n\t\t\tindex--;\n\t\t} else {\n\t\t\t// add element to our tracking array\n\t\t\ttempArray.push(theArray[index][key]);\n\t\t}\n\t}\n\treturn theArray;\n}\n\nexport async function shuffleArray(array) {\n\tlet currentIndex = array.length, randomIndex;\n\t// While there remain elements to shuffle.\n\twhile (currentIndex !== 0) {\n\t\t// Pick a remaining element.\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex--;\n\t\t// And swap it with the current element.\n\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\tarray[randomIndex], array[currentIndex]];\n\t}\n\treturn array;\n}\n\nexport function nearestGreaterPowerOf2(num) {\n\tlet current = 0;\n\tlet j = 0;\n\twhile (current <= num) {\n\t\tcurrent = 2 ** (j + 1);\n\t\tj++;\n\t}\n\treturn current;\n}\n\nexport function nearestLesserPowerOf2(num) {\n\tlet last = 0;\n\tlet current = 0;\n\tlet j = 0;\n\twhile (current <= num) {\n\t\tlast = current\n\t\tcurrent = 2 ** (j + 1);\n\t\tj++;\n\t}\n\treturn last;\n}\n\nexport function bracketSorter(a, b) {\n\tconst value1 = a[1];\n\tconst value2 = b[1];\n\n\t// r > l\n\t// for r, sort col increasing\n\t// for l, sort col decreasing\n\t// always sort row increasing\n\n\tif (value1.side === \"r\" && value2.side === \"l\") {\n\t\treturn -1;\n\t} else if (value1.side === \"l\" && value2.side === \"r\") {\n\t\treturn 1;\n\t} else if (value1.side === \"l\" && value2.side === \"l\") {\n\t\tif (value1.col > value2.col) {\n\t\t\treturn -1;\n\t\t} else if (value1.col < value2.col) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\tif (value1.index > value2.index) {\n\t\t\t\treturn 1;\n\t\t\t} else if (value1.index < value2.index) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} else if (value1.side === \"r\" && value2.side === \"r\") {\n\t\tif (value1.col > value2.col) {\n\t\t\treturn 1;\n\t\t} else if (value1.col < value2.col) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (value1.index > value2.index) {\n\t\t\t\treturn 1;\n\t\t\t} else if (value1.index < value2.index) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tthrow new Error(\"Found bracket with invalid side: \" + value1.side + \" or \" + value2.side);\n\t}\n}\n\nexport function openBracket(uuid, userId = undefined, state = {}) {\n\tconsole.log(\"Opening Bracket: \" + uuid);\n\t//open the bracket editor and pass the bracket id off\n\tnavigate(\"/user/\" + (userId ? userId : getUserInfo().id) + \"/bracket/\" + uuid, { state: state });\n}\n\nexport function downloadBracket(bracketId, artistName) {\n\tlet bracketEl = document.getElementById(bracketId);\n\thtml2canvas(bracketEl, {\n\t\tscale: 4,\n\t\tscrollX: -bracketEl.offsetLeft,\n\t\tscrollY: -bracketEl.offsetTop,\n\t\tlogging: false,\n\t}).then(function (canvas) {\n\t\t//canvas = document.body.appendChild(canvas); // used for debugging\n\t\t//console.log(canvas.width, canvas.height);\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.fillStyle = \"black\";\n\t\tctx.font = \"bold 30px sans-serif\";\n\t\tctx.fillText(artistName, canvas.width / 8, canvas.height / 16, 225);\n\t\tctx.font = \"8px sans-serif\";\n\t\tctx.fillText(\n\t\t\t\"Bracket made at cgarren.github.io/song-coliseum\",\n\t\t\tcanvas.width / 8,\n\t\t\tcanvas.height / 16 + 20,\n\t\t\t225\n\t\t);\n\t\tconst createEl = document.createElement(\"a\");\n\t\tcreateEl.href = canvas.toDataURL(\"image/svg+xml\");\n\t\tcreateEl.download = artistName + \" bracket from Beat Bracket\";\n\t\tcreateEl.click();\n\t\tcreateEl.remove();\n\t});\n}\n\nexport function bracketUnchanged(bracket) {\n\tif (!bracket instanceof Map) return false;\n\tfor (let element of bracket.values()) {\n\t\tif (element.col !== 0 && element.song) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}","// Guest profile pic\nimport guestProfileImage from \"../assets/images/guestProfileImage.png\";\nimport { checkSpotifyAuth } from \"./helpers\";\n\nasync function loadSpotifyRequest(url, params) {\n\tif (checkSpotifyAuth()) {\n\t\tif (params) {\n\t\t\turl = url + \"?\" + new URLSearchParams(params);\n\t\t}\n\t\tconst response = await fetch(url, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t\t}\n\t\t});\n\n\t\tif (response.ok) {\n\t\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nasync function postRequest(url, params, data) {\n\tif (params) {\n\t\turl = url + \"?\" + new URLSearchParams(params);\n\t}\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t},\n\t\tbody: JSON.stringify(data)\n\t});\n\n\tif (response.ok) {\n\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t} else if (response.status === 429) {\n\t\tthrow new Error(\"Too many requests. Code: \" + response.status);\n\t} else {\n\t\tthrow new Error(\"Unknown request error. Code: \" + response.status);\n\t}\n}\n\nasync function putRequest(url, params, data) {\n\tif (params) {\n\t\turl = url + \"?\" + new URLSearchParams(params);\n\t}\n\tconst response = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t'Content-Type': 'image/jpeg',\n\t\t\t'Authorization': 'Bearer ' + sessionStorage.getItem('accessToken')\n\t\t},\n\t\t///body: data\n\t});\n\n\tif (response.ok) {\n\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t} else if (response.status === 429) {\n\t\tthrow new Error(\"Too many requests. Code: \" + response.status);\n\t} else {\n\t\tthrow new Error(\"Unknown request error. Code: \" + response.status);\n\t}\n}\n\nasync function createPlaylist(name = \"New Playlist\", description = \"\", isPublic = true, isCollaborative = false) {\n\tconst response = await loadSpotifyRequest(\"https://api.spotify.com/v1/me\");\n\tif (!response[\"error\"]) {\n\t\tconst url = \"https://api.spotify.com/v1/users/\" + response.id + \"/playlists\"\n\t\treturn await postRequest(url, {}, {\n\t\t\t\"name\": name,\n\t\t\t\"public\": isPublic,\n\t\t\t\"collaborative\": isCollaborative,\n\t\t\t\"description\": description\n\t\t})\n\t}\n\treturn response;\n}\n\nasync function addTracksToPlaylist(playlistId, trackUris) {\n\tconst url = \"https://api.spotify.com/v1/playlists/\" + playlistId + \"/tracks\"\n\treturn await postRequest(url, {\n\t\t\"uris\": trackUris\n\t})\n}\n\nasync function getUserInfo(userId = undefined) {\n\tlet url = \"https://api.spotify.com/v1/me\";\n\tif (userId) {\n\t\turl = \"https://api.spotify.com/v1/users/\" + userId;\n\t}\n\tconst response = await loadSpotifyRequest(url);\n\tif (response !== 1) {\n\t\tif (response.images.length === 0) {\n\t\t\tresponse.images.push({\n\t\t\t\turl: guestProfileImage,\n\t\t\t});\n\t\t}\n\t\treturn response;\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nasync function isCurrentUser(userId) {\n\tconst currentUser = await getUserInfo();\n\tif (userId === currentUser.id) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport {\n\tloadSpotifyRequest,\n\tpostRequest,\n\tputRequest,\n\taddTracksToPlaylist,\n\tcreatePlaylist,\n\tgetUserInfo,\n\tisCurrentUser\n}","export default __webpack_public_path__ + \"static/guestProfileImage-56ea6ecf196675a29e7b5ffca974fde1.png\";"],"names":["Script","src","alt","width","height","question","answer","className","loggedIn","LoginButton","variant","href","heightClass","spotifyLogo","onClick","console","log","window","location","redirect_uri","origin","state","generateRandomString","show_dialog","localStorage","getItem","sessionStorage","setItem","url","encodeURIComponent","spotifyLogoGreen","Seo","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","useStaticQuery","site","siteMetadata","seo","name","content","Head","type","length","text","possible","i","charAt","Math","floor","random","async","getParamsFromURL","new_url","hashParams","e","r","q","hash","substring","exec","decodeURIComponent","getHashParams","raw_hash","history","replaceState","document","expires_at","Date","now","parseInt","expires_in","err","error","message","checkSpotifyAuth","timer","undefined","mydate","toString","clearInterval","popularitySort","track1","track2","popularity","shuffleArray","array","randomIndex","currentIndex","nearestGreaterPowerOf2","num","current","j","nearestLesserPowerOf2","last","bracketSorter","a","b","value1","value2","side","col","index","Error","openBracket","uuid","userId","navigate","getUserInfo","id","bracketUnchanged","bracket","Map","element","values","song","loadSpotifyRequest","params","URLSearchParams","response","fetch","headers","ok","json","images","push","guestProfileImage","isCurrentUser"],"sourceRoot":""}